name: Update Webmentions Cache

on:
  schedule:
    # Runs every day at 3:15 AM UTC (adjust as needed)
    - cron: '15 3 * * *'
  workflow_dispatch: # Allows manual triggering from GitHub Actions tab

jobs:
  build_and_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Or use default GITHUB_TOKEN with correct permissions

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Eleventy Site & Update Cache
        env:
          WEBMENTION_IO_TOKEN: ${{ secrets.WEBMENTION_IO_TOKEN_SECRET }}
          MEDIA_URL_PREFIX: https://media.davidpeach.me
          NODE_ENV: production
        run: npm run build

      - name: Commit and Push Cache
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'

          CACHE_FILE=".cache/webmentions.json"

          echo "--- Pre-Commit Debug ---"
          echo "Current Branch: $(git branch --show-current)"
          echo "Looking for $CACHE_FILE in current commit (HEAD) using ls-tree:"
          git ls-tree -r HEAD --name-only | grep "${CACHE_FILE}$" || echo "$CACHE_FILE NOT FOUND in HEAD via ls-tree"
          
          echo "Checking if $CACHE_FILE exists in working directory before add:"
          if [ -f "$CACHE_FILE" ]; then
            echo "$CACHE_FILE exists in working directory. First 10 lines:"
            head -n 10 "$CACHE_FILE"
          else
            echo "$CACHE_FILE does NOT exist in working directory before add. Build script may not have created it."
            # Exit here if the file isn't even created by the build script
            # This would prevent the 'else' of the main commit logic from being misleading
            echo "Final decision: $CACHE_FILE not found, no commit."
            exit 0 
          fi

          echo "Git status for $CACHE_FILE before add:"
          git status --porcelain "$CACHE_FILE"

          echo "Attempting to 'git add $CACHE_FILE'"
          git add "$CACHE_FILE"

          echo "Git status for $CACHE_FILE after add:"
          git status --porcelain "$CACHE_FILE"
          echo "--- End Pre-Commit Debug ---"

          # Check if there are STAGED changes for this file compared to HEAD
          # `git diff --cached --quiet` returns 0 if no staged changes, 1 if there are.
          if ! git diff --cached --quiet -- "$CACHE_FILE"; then
            echo "Changes detected for $CACHE_FILE after staging (compared to HEAD). Attempting to commit..."
            git commit -m "Update webmentions cache [skip ci]"
            # Optional: Add git show to log what was committed
            # echo "Showing commit:"
            # git show --stat
            git push
            echo "Webmentions cache committed and pushed."
          else
            echo "No staged changes for $CACHE_FILE compared to HEAD, or file is identical to HEAD. No commit needed."
          fi
