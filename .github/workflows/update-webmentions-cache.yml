name: Update Webmentions Cache

on:
  schedule:
    # Runs every day at 3:15 AM UTC (adjust as needed)
    - cron: '15 3 * * *'
  workflow_dispatch: # Allows manual triggering from GitHub Actions tab

jobs:
  build_and_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Or use default GITHUB_TOKEN with correct permissions

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Eleventy Site & Update Cache
        env:
          WEBMENTION_IO_TOKEN: ${{ secrets.WEBMENTION_IO_TOKEN_SECRET }}
          MEDIA_URL_PREFIX: https://media.davidpeach.me
          NODE_ENV: production
        run: npm run build

      - name: Commit and Push Cache
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'

          echo "--- Initial File Status in Repository (HEAD) ---"
          echo "Looking for .cache/webmentions.json in current commit (HEAD):"
          # This command lists all files in the current commit. We grep for our specific file.
          # If not found, it will echo the "NOT FOUND" message.
          git ls-tree -r HEAD --name-only | grep '.cache/webmentions.json$' || echo ".cache/webmentions.json NOT FOUND in HEAD"
          echo "Full file listing in HEAD (first 20 lines for brevity if many files):"
          git ls-tree -r HEAD --name-only | head -n 20
          echo "-------------------------------------------------"

          echo "--- Debugging Git Status ---"
          echo "Current Branch:"
          git branch --show-current
          
          CACHE_FILE=".cache/webmentions.json" # Define for easier use

          echo "Checking for file: $CACHE_FILE"
          if [ -f "$CACHE_FILE" ]; then
            echo "$CACHE_FILE exists. Displaying its first 10 lines:"
            head -n 10 "$CACHE_FILE" # See the start of the file, including lastFetched
            
            echo "----"
            echo "Git Status (porcelain - M=modified, A=added, ??=untracked):"
            git status --porcelain "$CACHE_FILE" # Shows status of just this file

            echo "----"
            echo "Running 'git diff --stat $CACHE_FILE' (should show if different from HEAD):"
            git diff --stat "$CACHE_FILE" 
            
            echo "----"
            echo "Running 'git diff --quiet $CACHE_FILE'; exit code will be on next line."
            git diff --quiet "$CACHE_FILE"
            DIFF_QUIET_EXIT_CODE=$?
            echo "Exit code of 'git diff --quiet $CACHE_FILE': $DIFF_QUIET_EXIT_CODE"

            if [ $DIFF_QUIET_EXIT_CODE -ne 0 ]; then
              echo "Changes detected by 'git diff --quiet $CACHE_FILE'."
            else
              echo "No changes detected by 'git diff --quiet $CACHE_FILE'."
              echo "Showing full 'git diff $CACHE_FILE' to see why (if it's short):"
              git diff "$CACHE_FILE"
            fi
          else
            echo "$CACHE_FILE does NOT exist at commit stage."
          fi
          echo "--- End Debugging Git Status ---"

          # Original logic (you might want to temporarily use the exit code from debug for the if condition)
          # For example: if [ -f "$CACHE_FILE" ] && [ $DIFF_QUIET_EXIT_CODE -ne 0 ]; then
          if [ -f "$CACHE_FILE" ] && ! git diff --quiet "$CACHE_FILE"; then
            echo "Attempting to 'git add $CACHE_FILE' and commit..."
            git add "$CACHE_FILE" 
            git commit -m "Update webmentions cache [skip ci]"
            git push
            echo "Webmentions cache committed and pushed."
          else
            echo "Final decision: No changes to webmentions cache or file not found (based on original logic)."
          fi
